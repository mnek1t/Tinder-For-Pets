version: '3.4'
name: tinder_for_pets
services:
  tinderforpets.api:
    image: ${DOCKER_REGISTRY-}tinderforpetsapi
    container_name: tinderforpets.api
    build:
      context: .
      dockerfile: TinderForPets.API/Dockerfile
    volumes:
      - ./TinderForPets.API:/app/TinderForPets.API:cached
      - ./TinderForPets.Application:/app/TinderForPets.Application:cached
      - ./TinderForPets.Data:/app/TinderForPets.Data:cached
      - ./TinderForPets.Core:/app/TinderForPets.Core:cached
      - ./SharedKernel:/app/SharedKernel:cached
      - ./TinderForPets.Infrastructure:/app/TinderForPets.Infrastructure:cached
    ports:
       - "5294:5294"
       - "5295:5295"
    depends_on:
        - "tinderforpets.db"
        - "tinderforpets.cache"

  tinderforpets.client:
   image: ${DOCKER_REGISTRY-}tinderforpetsclient
   container_name: tinderforpets.client
   build:
     context: ../../frontend/my-app/
     dockerfile: Dockerfile
   ports:
    - "3000:3000"
   volumes:
    - ../../frontend/my-app/:/react-app
    - /react-app/node_modules
   environment:
    - WATCHPACK_POLLING=true
   depends_on:
    - tinderforpets.api


  tinderforpets.db:
    image: postgres:latest
    container_name: tinderforpets.db
    ports:
        - "5432:5432"
    volumes:
        - "./containers/tinderforpets.db:/var/lib/postgresql/data"  
    environment:
        POSTRGRES_DB: tinder_for_pets
        POSTGRES_USER: mykyta
        POSTGRES_PASSWORD: Tinder123!
  
  tinderforpets.cache:
     image: redis:latest
     restart: always
     ports:
        - "6379:6379"